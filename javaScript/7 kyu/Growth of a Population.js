"use strict";
/**
В маленьком городке население p0 = 1000 на начало года. 
Население регулярно увеличивается на 2 percent 1 год, и, кроме того , 50 каждый год в город приезжают новые жители. 
Сколько лет нужно городу, чтобы его население было больше или равно количеству p = 1200 жителей?

В конце первого года будет:
1000 + 1000 * 0,02 + 50 => 1070 жителей
*******************************************
В конце 2-го года будет:
1070 + 1070 * 0,02 + 50 => 1141 жителей (** количество жителей — целое число **)
*******************************************
В конце 3-го года будет:
1141 + 1141 * 0,02 + 50 => 1213
*******************************************
На это потребуется целых 3 года.

Более общие параметры:
p0, percent, aug (жители приезжают или уезжают каждый год), p (населения, чтобы превзойти)

функция nb_year должна возвращать n количество полных лет, необходимых для получения населения, большего или равного p.
aug — целое число, percent — положительное или нулевое плавающее число, p0 и p — положительные целые числа (> 0)

Examples:
nb_year(1500, 5, 100, 5000) -> 15
nb_year(1500000, 2.5, 10000, 2000000) -> 10

Примечание:
Не забудьте преобразовать параметр процента в процент в теле вашей функции: если параметр процента равен 2, 
вы должны преобразовать его в 0,02.
 */

function nbYear(p0, percent, aug, p) {
    // your code
    let count = 0;
    // for (let i = 0; p0 < p; i++) {
    //     p0 += (p0 * (percent === 0 ? 0 : percent / 100) + aug) | 0;
    //     ++count;
    // }
    // return count;

    for (var years = 0; p0 < p; years++) {
        p0 = Math.floor(p0 + (p0 * percent) / 100 + aug);
    }
    return years;
}

console.log(nbYear(1500, 5, 100, 5000)); // 15
console.log(nbYear(1500000, 2.5, 10000, 2000000)); // 10
console.log(nbYear(1500000, 0.25, 1000, 2000000)); // 94
